type File {
  id:        ID!        
  path:      String!      
  filename:  String!
  mimetype:  String!
  encoding:  String!
  createdAt: String!    
  updatedAt: String!
}

input FileCreateInput {
  id: ID
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

input FileCreateOneInput {
  create: FileCreateInput
  connect: FileWhereUniqueInput
}

input FileUpdateDataInput {
  path: String
  filename: String
  mimetype: String
  encoding: String
}

input FileUpdateInput {
  path: String
  filename: String
  mimetype: String
  encoding: String
}
input FileUpdateManyMutationInput {
  path: String
  filename: String
  mimetype: String
  encoding: String
}

input FileUpdateOneInput {
  create: FileCreateInput
  update: FileUpdateDataInput
  upsert: FileUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneRequiredInput {
  create: FileCreateInput
  update: FileUpdateDataInput
  upsert: FileUpsertNestedInput
  connect: FileWhereUniqueInput
}

input FileUpsertNestedInput {
  update: FileUpdateDataInput!
  create: FileCreateInput!
}

input FileWhereInput {
  id: ID
  path: String
  filename: String
  mimetype: String
  encoding: String
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
  NOT: [FileWhereInput!]
}

input FileWhereUniqueInput {
  id: ID
  path: String
}